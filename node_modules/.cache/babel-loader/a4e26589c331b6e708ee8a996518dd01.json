{"ast":null,"code":"const webSocketSetup = async ({\n  text,\n  currencyPair,\n  callBack\n}) => {\n  console.log(text, currencyPair);\n  let ws = new WebSocket('wss://ws.bitstamp.net/');\n\n  ws.onopen = () => {\n    //Subscribe to the channel\n    ws.send(JSON.stringify({\n      event: \"bts:\".concat(text),\n      data: {\n        channel: \"order_book_\".concat(currencyPair)\n      }\n    }));\n  };\n\n  if (text === 'subscribe') ws.onmessage = msg => {\n    console.log(JSON.parse(msg.data), '=============>'); // callBack && callBack(JSON.parse(msg.data));\n  };\n\n  ws.onerror = error => {\n    console.log(\"WebSocket error: \".concat(error));\n  };\n};\n\nexport default webSocketSetup;","map":{"version":3,"sources":["/Users/tejirimatthew/crypto-order-book-app/src/utils/webSocketSetup.js"],"names":["webSocketSetup","text","currencyPair","callBack","console","log","ws","WebSocket","onopen","send","JSON","stringify","event","data","channel","onmessage","msg","parse","onerror","error"],"mappings":"AAAA,MAAMA,cAAc,GAAG,OAAO;AAC5BC,EAAAA,IAD4B;AAE5BC,EAAAA,YAF4B;AAG5BC,EAAAA;AAH4B,CAAP,KAIjB;AAGJC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBC,YAAlB;AAEA,MAAII,EAAE,GAAG,IAAIC,SAAJ,CAAc,wBAAd,CAAT;;AAEAD,EAAAA,EAAE,CAACE,MAAH,GAAY,MAAM;AAChB;AACAF,IAAAA,EAAE,CAACG,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,KAAK,gBAASX,IAAT,CAAP;AAAwBY,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,uBAAgBZ,YAAhB;AAAT;AAA9B,KAAf,CAAR;AAED,GAJD;;AAKA,MAAGD,IAAI,KAAK,WAAZ,EAEAK,EAAE,CAACS,SAAH,GAAgBC,GAAD,IAAS;AACtBZ,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACO,KAAL,CAAWD,GAAG,CAACH,IAAf,CAAZ,EAAkC,gBAAlC,EADsB,CAGtB;AACD,GAJD;;AAOAP,EAAAA,EAAE,CAACY,OAAH,GAAaC,KAAK,IAAI;AACpBf,IAAAA,OAAO,CAACC,GAAR,4BAAgCc,KAAhC;AACD,GAFD;AAID,CA7BD;;AA+BA,eAAenB,cAAf","sourcesContent":["const webSocketSetup = async ({\n  text,\n  currencyPair,\n  callBack\n}) => {\n\n\n  console.log(text, currencyPair);\n\n  let ws = new WebSocket('wss://ws.bitstamp.net/');\n\n  ws.onopen = () => {\n    //Subscribe to the channel\n    ws.send(JSON.stringify({ event: `bts:${text}`, data: { channel: `order_book_${currencyPair}` } }))\n\n  }\n  if(text === 'subscribe')\n\n  ws.onmessage = (msg) => {\n    console.log(JSON.parse(msg.data), '=============>');\n\n    // callBack && callBack(JSON.parse(msg.data));\n  }\n\n\n  ws.onerror = error => {\n    console.log(`WebSocket error: ${error}`)\n  }\n\n}\n\nexport default webSocketSetup;\n\n"]},"metadata":{},"sourceType":"module"}