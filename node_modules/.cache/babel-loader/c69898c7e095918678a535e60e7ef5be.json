{"ast":null,"code":"export const subscribe = ({\n  currencyPair,\n  setWs,\n  getData\n}) => {\n  const ws = new WebSocket('wss://ws.bitstamp.net/');\n\n  ws.onopen = () => {\n    //Subscribe to the channel\n    ws.send(JSON.stringify({\n      event: \"bts:subscribe\",\n      data: {\n        channel: \"order_book_\".concat(currencyPair)\n      }\n    }));\n    setWs(ws);\n  };\n\n  ws.onmessage = msg => {\n    getData(JSON.parse(msg.data));\n  };\n};\nexport const unSubscribe = ({\n  ws,\n  currencyPair\n}) => {\n  console.log(ws, currencyPair, 'oooooooooooooo======================');\n  ws.close(); // ws.onopen = () => {\n  //   //Unsubscribe to the channel\n  //   ws.send(JSON.stringify({ event: `bts:unsubscribe`, data: { channel: `order_book_${currencyPair}` } }))\n  //   ws.close();\n  // }\n};","map":{"version":3,"sources":["/Users/tejirimatthew/crypto-order-book-app/src/utils/webSocketSetup.js"],"names":["subscribe","currencyPair","setWs","getData","ws","WebSocket","onopen","send","JSON","stringify","event","data","channel","onmessage","msg","parse","unSubscribe","console","log","close"],"mappings":"AAEA,OAAO,MAAMA,SAAS,GAAG,CAAC;AACxBC,EAAAA,YADwB;AAExBC,EAAAA,KAFwB;AAGxBC,EAAAA;AAHwB,CAAD,KAInB;AACJ,QAAMC,EAAE,GAAG,IAAIC,SAAJ,CAAc,wBAAd,CAAX;;AACAD,EAAAA,EAAE,CAACE,MAAH,GAAY,MAAM;AAChB;AACAF,IAAAA,EAAE,CAACG,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,KAAK,iBAAP;AAA0BC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,uBAAgBX,YAAhB;AAAT;AAAhC,KAAf,CAAR;AACAC,IAAAA,KAAK,CAACE,EAAD,CAAL;AAED,GALD;;AAOAA,EAAAA,EAAE,CAACS,SAAH,GAAgBC,GAAD,IAAS;AACvBX,IAAAA,OAAO,CAACK,IAAI,CAACO,KAAL,CAAWD,GAAG,CAACH,IAAf,CAAD,CAAP;AACA,GAFD;AAGD,CAhBM;AAoBP,OAAO,MAAMK,WAAW,GAAG,CAAC;AAACZ,EAAAA,EAAD;AAAKH,EAAAA;AAAL,CAAD,KAAwB;AACjDgB,EAAAA,OAAO,CAACC,GAAR,CAAYd,EAAZ,EAAgBH,YAAhB,EAA8B,sCAA9B;AACAG,EAAAA,EAAE,CAACe,KAAH,GAFiD,CAGjD;AACA;AACA;AACA;AACA;AACD,CARM","sourcesContent":["\n\nexport const subscribe = ({\n  currencyPair,\n  setWs,\n  getData\n}) => {\n  const ws = new WebSocket('wss://ws.bitstamp.net/');\n  ws.onopen = () => {\n    //Subscribe to the channel\n    ws.send(JSON.stringify({ event: `bts:subscribe`, data: { channel: `order_book_${currencyPair}` } }))\n    setWs(ws)\n\n  }\n\n  ws.onmessage = (msg) => {\n   getData(JSON.parse(msg.data));\n  }\n}\n\n\n\nexport const unSubscribe = ({ws, currencyPair}) => {\n  console.log(ws, currencyPair, 'oooooooooooooo======================');\n  ws.close();\n  // ws.onopen = () => {\n  //   //Unsubscribe to the channel\n  //   ws.send(JSON.stringify({ event: `bts:unsubscribe`, data: { channel: `order_book_${currencyPair}` } }))\n  //   ws.close();\n  // }\n}"]},"metadata":{},"sourceType":"module"}