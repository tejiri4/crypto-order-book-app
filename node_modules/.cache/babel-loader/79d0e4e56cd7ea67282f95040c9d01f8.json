{"ast":null,"code":"const webSocketSetup = async ({\n  text,\n  currencyPair,\n  callBack,\n  ws\n}) => {\n  if (text === 'subscribe') {\n    console.log('closed');\n\n    ws.onopen = () => {\n      //Subscribe to the channel\n      ws.send(JSON.stringify({\n        event: \"bts:\".concat(text),\n        data: {\n          channel: \"order_book_\".concat(currencyPair)\n        }\n      }));\n    };\n\n    ws.onmessage = msg => {\n      console.log(JSON.parse(msg.data), '=============>'); // callBack && callBack(JSON.parse(msg.data));\n    };\n  } else {\n    ws.close();\n  } // ws.onerror = error => {\n  //   console.log(`WebSocket error: ${error}`)\n  // }\n\n};\n\nexport const subscribe = () => {};","map":{"version":3,"sources":["/Users/tejirimatthew/crypto-order-book-app/src/utils/webSocketSetup.js"],"names":["webSocketSetup","text","currencyPair","callBack","ws","console","log","onopen","send","JSON","stringify","event","data","channel","onmessage","msg","parse","close","subscribe"],"mappings":"AAEA,MAAMA,cAAc,GAAG,OAAO;AAC5BC,EAAAA,IAD4B;AAE5BC,EAAAA,YAF4B;AAG5BC,EAAAA,QAH4B;AAI5BC,EAAAA;AAJ4B,CAAP,KAKjB;AAEJ,MAAIH,IAAI,KAAK,WAAb,EAA0B;AACxBI,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AAEAF,IAAAA,EAAE,CAACG,MAAH,GAAY,MAAM;AAChB;AACAH,MAAAA,EAAE,CAACI,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,gBAASV,IAAT,CAAP;AAAwBW,QAAAA,IAAI,EAAE;AAAEC,UAAAA,OAAO,uBAAgBX,YAAhB;AAAT;AAA9B,OAAf,CAAR;AAGD,KALD;;AAQAE,IAAAA,EAAE,CAACU,SAAH,GAAgBC,GAAD,IAAS;AACtBV,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACO,KAAL,CAAWD,GAAG,CAACH,IAAf,CAAZ,EAAkC,gBAAlC,EADsB,CAGtB;AACD,KAJD;AAKD,GAhBD,MAgBO;AACLR,IAAAA,EAAE,CAACa,KAAH;AACD,GApBG,CA2BJ;AACA;AACA;;AAED,CApCD;;AAuCA,OAAO,MAAMC,SAAS,GAAG,MAAM,CAE9B,CAFM","sourcesContent":["\n\nconst webSocketSetup = async ({\n  text,\n  currencyPair,\n  callBack,\n  ws\n}) => {\n\n  if (text === 'subscribe') {\n    console.log('closed');\n\n    ws.onopen = () => {\n      //Subscribe to the channel\n      ws.send(JSON.stringify({ event: `bts:${text}`, data: { channel: `order_book_${currencyPair}` } }))\n\n\n    }\n\n\n    ws.onmessage = (msg) => {\n      console.log(JSON.parse(msg.data), '=============>');\n\n      // callBack && callBack(JSON.parse(msg.data));\n    }\n  } else {\n    ws.close();\n  }\n\n\n\n\n\n\n  // ws.onerror = error => {\n  //   console.log(`WebSocket error: ${error}`)\n  // }\n\n}\n\n\nexport const subscribe = () => {\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}